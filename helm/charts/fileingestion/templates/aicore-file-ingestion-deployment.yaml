apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.environment.namespace }}
  name: "{{ .Values.global.environment.name }}-aicore-file-ingestion"
  labels:
    app: "{{ .Values.global.app.name }}"
    env: "{{ .Values.global.environment.namespace }}"
    build: "{{ .Values.global.app.build }}"
spec:
  replicas: {{ .Values.global.ingestion.maxParallelism }}
  selector:
    matchLabels:
      app: "{{ .Values.global.environment.name }}-aicore-file-ingestion"
  template:
    metadata:
      labels:
        app: "{{ .Values.global.environment.name }}-aicore-file-ingestion"
        env: "{{ .Values.global.environment.namespace }}"
        build: "{{ .Values.global.app.build }}"
      {{- if eq .Values.global.app.enableMonitoring "True" }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.service.containerPort }}"
      {{- end }}
    spec:
      containers:
        - name: "{{ .Values.global.environment.name }}-aicore-file-ingestion"
          image: "{{ .Values.global.containerRegistry.name }}/ai-core-file-ingestion:{{ .Values.global.ingestion.service.tag }}"
          ports:
            - containerPort: {{ .Values.service.containerPort }}
          envFrom:
            - configMapRef:
                name: "{{ .Values.global.environment.name }}-aicore-file-ingestion-configmap"
          imagePullPolicy: "{{ .Values.global.containerRegistry.imagePullPolicy }}"
      {{- if .Values.global.containerRegistry.dockerConfig }}
      imagePullSecrets:
        - name: "{{ .Values.global.environment.name }}-acr-secret"
      {{- end }}
